# ========= LOGSTASH PIPELINE (UTF-8 بدون BOM) =========

input {
  http {
    host  => "0.0.0.0"
    port  => 8080
    # همه‌ی JSON ورودی را زیر فیلد evt می‌بریم تا با ECS تداخل نکند
    codec => json { target => "evt" }
  }
}

filter {
  # --- زمان: اگر Timestamp فرستادی، به @timestamp نگاشت کن
  if [evt][Timestamp] {
    date {
      match  => ["[evt][Timestamp]", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss.SSSZ"]
      target => "@timestamp"
      remove_field => ["[evt][Timestamp]"]
    }
  }

  # --- سطح لاگ: level یا Level را به log.level ببریم (ECS)
  if [evt][level] {
    mutate { add_field => { "[log][level]" => "%{[evt][level]}" } }
  } else if [evt][Level] {
    mutate { add_field => { "[log][level]" => "%{[evt][Level]}" } }
  }

  # --- متن پیام:
  # اگر Serilog با JsonFormatter(renderMessage: true) می‌فرستی، معمولاً RenderedMessage داریم.
  if [evt][RenderedMessage] {
    mutate { add_field => { "message" => "%{[evt][RenderedMessage]}" } }
  } else if [evt][message] {
    mutate { add_field => { "message" => "%{[evt][message]}" } }
  } else if [evt][MessageTemplate] {
    mutate { add_field => { "message" => "%{[evt][MessageTemplate]}" } }
  }

  # --- نام سرویس/اپ (ECS: service.name) و محیط (اختیاری)
  if [evt][Application] {
    mutate { add_field => { "[service][name]" => "%{[evt][Application]}" } }
  }
  if [evt][Environment] {
    mutate { add_field => { "[service][environment]" => "%{[evt][Environment]}" } }
  }

  # --- CorrelationId برای جستجوهای Trace
  if [evt][CorrelationId] {
    mutate { add_field => { "CorrelationId" => "%{[evt][CorrelationId]}" } }
  }

  # --- تمیزکاری
  mutate {
    remove_field => ["@version", "[evt][Environment]", "[evt][Application]"]
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "logs-%{+YYYY.MM.dd}"   # مثلاً logs-2025.09.15
  }

  # خروجی ترمینال برای دیباگ سریع
  stdout { codec => rubydebug }
}
# ========= LOGSTASH PIPELINE (UTF-8 بدون BOM) =========

input {
  http {
    host  => "0.0.0.0"
    port  => 8080
    # همه‌ی JSON ورودی را زیر فیلد evt می‌بریم تا با ECS تداخل نکند
    codec => json { target => "evt" }
  }
}

filter {
  # --- زمان: اگر Timestamp فرستادی، به @timestamp نگاشت کن
  if [evt][Timestamp] {
    date {
      match  => ["[evt][Timestamp]", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss.SSSZ"]
      target => "@timestamp"
      remove_field => ["[evt][Timestamp]"]
    }
  }

  # --- سطح لاگ: level یا Level را به log.level ببریم (ECS)
  if [evt][level] {
    mutate { add_field => { "[log][level]" => "%{[evt][level]}" } }
  } else if [evt][Level] {
    mutate { add_field => { "[log][level]" => "%{[evt][Level]}" } }
  }

  # --- متن پیام:
  # اگر Serilog با JsonFormatter(renderMessage: true) می‌فرستی، معمولاً RenderedMessage داریم.
  if [evt][RenderedMessage] {
    mutate { add_field => { "message" => "%{[evt][RenderedMessage]}" } }
  } else if [evt][message] {
    mutate { add_field => { "message" => "%{[evt][message]}" } }
  } else if [evt][MessageTemplate] {
    mutate { add_field => { "message" => "%{[evt][MessageTemplate]}" } }
  }

  # --- نام سرویس/اپ (ECS: service.name) و محیط (اختیاری)
  if [evt][Application] {
    mutate { add_field => { "[service][name]" => "%{[evt][Application]}" } }
  }
  if [evt][Environment] {
    mutate { add_field => { "[service][environment]" => "%{[evt][Environment]}" } }
  }

  # --- CorrelationId برای جستجوهای Trace
  if [evt][CorrelationId] {
    mutate { add_field => { "CorrelationId" => "%{[evt][CorrelationId]}" } }
  }

  # --- تمیزکاری
  mutate {
    remove_field => ["@version", "[evt][Environment]", "[evt][Application]"]
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "logs-%{+YYYY.MM.dd}"   # مثلاً logs-2025.09.15
  }

  # خروجی ترمینال برای دیباگ سریع
  stdout { codec => rubydebug }
}
